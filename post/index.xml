<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on 赛钱的妖怪</title><link>https://pomfret27.github.io/post/</link><description>Recent content in Posts on 赛钱的妖怪</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>SaisenKai</copyright><lastBuildDate>Thu, 14 Aug 2025 16:04:58 +0800</lastBuildDate><atom:link href="https://pomfret27.github.io/post/index.xml" rel="self" type="application/rss+xml"/><item><title>fumo 图鉴与 fumo 的购买时机</title><link>https://pomfret27.github.io/p/fumo-zukan/</link><pubDate>Thu, 14 Aug 2025 16:04:58 +0800</pubDate><guid>https://pomfret27.github.io/p/fumo-zukan/</guid><description>&lt;h2 id="fumo-图鉴">fumo 图鉴
&lt;/h2>&lt;h3 id="链接放开头">链接放开头
&lt;/h3>&lt;p>&lt;a class="link" href="https://www.kdocs.cn/l/cjv4MBfxm4bx" target="_blank" rel="noopener"
>https://www.kdocs.cn/l/cjv4MBfxm4bx&lt;/a>&lt;/p>
&lt;h3 id="事情的起因">事情的起因
&lt;/h3>&lt;p>看了那么多 fumo 的视频，我却还没有一只属于自己的 fumo，逛了一圈 bilibili 和 AmiAmi，却遗憾地发现没有自己想要的 fumo。&lt;/p>
&lt;p>&lt;strong>我喜欢的角色出 fumo 了吗？她有几只 fumo？她的 fumo 长什么样子？我在什么时候在哪里能买到她？&lt;/strong>&lt;/p>
&lt;p>为了回答这几个问题，我查阅了 &lt;a class="link" href="https://www.gift-gift.jp/nui/toho.html" target="_blank" rel="noopener"
>Gift 官网的 fumo 列表&lt;/a>，用多维表格整理了一份 &lt;a class="link" href="https://www.kdocs.cn/l/cjv4MBfxm4bx" target="_blank" rel="noopener"
>fumo 图鉴&lt;/a>。&lt;/p>
&lt;h3 id="图鉴的使用">图鉴的使用
&lt;/h3>&lt;center>&lt;img src="assets/Gift-website.png" alt="Gift 官网" title="Gift 官网" />Gift 官网&lt;/center>
&lt;p>&lt;strong>画册视图&lt;/strong>就像 Gift 官网一样赏心悦目，解决了 Gift 官网加载较慢的问题，你可以在这里慢慢欣赏 fumo 们的样子，也可以用筛选功能比较同一角色的不同 fumo。&lt;/p>
&lt;center>&lt;img src="assets/fumo-zukan.png" alt="fumo 图鉴" title="fumo 图鉴" />fumo 图鉴&lt;/center>
&lt;p>&lt;strong>表格视图&lt;/strong>里收录了每只 fumo 最新一次贩售的一些信息，可以帮助你简单判断某只 fumo 现在能不能买到，同时还可以查看吧唧的照片。如果你想要了解 fumo 的更多信息，可以点击官网链接自行查看。&lt;/p>
&lt;hr>
&lt;h2 id="fumo-的购买时机">fumo 的购买时机
&lt;/h2>&lt;h3 id="事前说明">事前说明
&lt;/h3>&lt;p>直到 fumo 图鉴完成，我都还没有下单过一只 fumo，一是财力不足，而是最想要的 fumo 暂时还没有。因此，我所言的“购买 fumo 的时机”，其根据均来源于 Gift 官网的信息和他人的经验，对于过去几年的情况更是一无所知，如有错误，请勿过分责备。&lt;/p>
&lt;h3 id="fumo-的贩售流程">fumo 的贩售流程
&lt;/h3>&lt;p>fumo 的贩售一般有以下几个阶段：&lt;/p>
&lt;ol>
&lt;li>线下优先贩售&lt;/li>
&lt;li>线上开启预售&lt;/li>
&lt;li>线上补款发货&lt;/li>
&lt;li>线上余量贩售&lt;/li>
&lt;/ol>
&lt;p>线下优先贩售并不是每一次都有的，而线上贩售基本上都有。预售需要支付定金，预售和补款发货之间通常会相隔半年到一年，等待的时间还是很久的。如果有线下优先贩售，那么贩售时间是线下优先贩售的时间；如果没有线下优先贩售，那么贩售时间是线上贩售发货的时间。补款发货后的几个月，可能会有余量存在，这时错过了预售的朋友们也可以选择全款拿下。&lt;/p>
&lt;p>如果 fumo 是接单生产的，那么就比较容易有余量；如果不是，那么就有提前截单的可能。不过 2022 年 8 月到现在都是接单生产的，没必要那么担心。&lt;/p>
&lt;h3 id="fumo-的购买时机-1">fumo 的购买时机
&lt;/h3>&lt;p>fumo 可以在&lt;strong>线下购买&lt;/strong>，通常例大祭和 BW 等活动的摊贩会进行先行贩售，另外，日本的一些线下店铺也会贩卖 fumo。&lt;/p>
&lt;p>如果你没有能力赶往线下购买 fumo，也可以尝试找找代购。&lt;/p>
&lt;p>fumo 还可以在&lt;strong>线上购买&lt;/strong>，按照难易顺序大致有以下几种途径：&lt;/p>
&lt;ol>
&lt;li>bilibili 会员购&lt;/li>
&lt;li>淘宝 bilibili 旗舰店&lt;/li>
&lt;li>淘宝阿弥阿弥 AmiAmi 中国公式店&lt;/li>
&lt;li>amiami.com（全球站）&lt;/li>
&lt;li>amiami.jp（日本站）&lt;/li>
&lt;li>Gift ONLINE SHOP&lt;/li>
&lt;/ol>
&lt;p>最后两个比较复杂，没有必要就不要尝试了，感兴趣的也可以自行搜索。amiami.com（全球站）操作比较麻烦，而且是从日本发货，要考虑海关等问题，不过如果能找到其他途径没有的 fumo 的话，还是值得尝试的。&lt;/p>
&lt;p>淘宝阿弥阿弥 AmiAmi 中国公式店只有“预售 + 补款”的形式，没有余量可以买。&lt;/p>
&lt;p>bilibili 会员购、淘宝 bilibili 旗舰店、amiami.com（全球站）除了“预售 + 补款”的形式，还可以购买余量，错过预售的朋友们可以等补款发货之后蹲蹲看余量。另外，即使错过了AmiAmi 的预售，也可能在 bilibili 发现全款预售。&lt;/p>
&lt;hr>
&lt;h2 id="总结">总结
&lt;/h2>&lt;p>可以在下面几个时间点购买 fumo：&lt;/p>
&lt;ol>
&lt;li>线下优先贩售，可以请人代购&lt;/li>
&lt;li>线上预售，等待补款发货&lt;/li>
&lt;li>线上余量贩售，补款发货之后几个月可能存在余量&lt;/li>
&lt;/ol>
&lt;p>根据图鉴里的贩售时间信息，推断一下这段时间能不能买到想要的 fumo，四个线上购买途径最好都看一遍，这样就不会错过购买 fumo 的机会，最新贩售的 fumo 的购买时间还是很充裕的，而且如果能买到 fumo 的话 bilibili 和贴吧都会有消息。&lt;/p>
&lt;p>最后希望大家都能有自己想要的 fumo，fumofumofumo (ᗜˬᗜ)&lt;/p></description></item><item><title>使用 Hugo + Github 搭建个人博客</title><link>https://pomfret27.github.io/p/build-blog-with-hugo-and-github/</link><pubDate>Tue, 12 Aug 2025 19:13:34 +0800</pubDate><guid>https://pomfret27.github.io/p/build-blog-with-hugo-and-github/</guid><description>&lt;h2 id="搭建思路">搭建思路
&lt;/h2>&lt;ol>
&lt;li>Hugo 可以将 Markdown 文件转换为 HTML 文件；&lt;/li>
&lt;li>GitHub Pages 是 GitHub 提供的一个免费的静态网站托管服务，可用于托管个人网站、博客、文档、项目页面等静态内容；&lt;/li>
&lt;li>创建 2 个 GitHub 仓库，一个是用于存放博客源文件的博客源仓库，另一个则是用于存放 Hugo 生成的 HTML 文件的 GitHub Pages 仓库；&lt;/li>
&lt;li>使用 Github Actions 功能实现提交源码后自动发布。&lt;/li>
&lt;/ol>
&lt;h2 id="准备工作">准备工作
&lt;/h2>&lt;p>要想使用 Hugo + Github 搭建个人博客，首先要做好以下准备。&lt;/p>
&lt;ol>
&lt;li>确保网络环境能够稳定地访问 &lt;strong>Github&lt;/strong>；&lt;/li>
&lt;li>创建 &lt;strong>GitHub&lt;/strong> 账号；&lt;/li>
&lt;li>安装 &lt;strong>VS Code&lt;/strong> 与 &lt;strong>Git&lt;/strong>；&lt;/li>
&lt;/ol>
&lt;p>以上内容只要稍加搜索，就能找到大量的教程，在此就不赘述了，接下来讲最后一项准备工作。&lt;/p>
&lt;p>&lt;strong>“我有东西可以写，我想写，我想一直写。”&lt;/strong>&lt;/p>
&lt;p>如果你能做到前两点的话，请继续下一步；如果你能做到全部三点的话，也许哪天我就能看见你的博客；如果你连第一点都还做不到的话，不妨先试着写点什么。&lt;/p>
&lt;h2 id="安装-hugo">安装 Hugo
&lt;/h2>&lt;p>Hugo 的安装方法很多，详情可以参考官方的&lt;a class="link" href="https://gohugo.com.cn/installation/windows/" target="_blank" rel="noopener"
>在 Windows 上安装 Hugo&lt;/a>，建议安装扩展版（extended）。&lt;/p>
&lt;h2 id="创建-github-仓库">创建 GitHub 仓库
&lt;/h2>&lt;h3 id="创建博客源仓库">创建博客源仓库
&lt;/h3>&lt;ol>
&lt;li>给仓库取一个你喜欢的名字（比如我用的是 &lt;strong>BlogSource&lt;/strong>）；&lt;/li>
&lt;li>选择 &lt;strong>Private&lt;/strong>，设置为私有仓库；&lt;/li>
&lt;li>勾选添加 &lt;strong>README&lt;/strong> 文件；&lt;/li>
&lt;li>创建仓库。&lt;/li>
&lt;/ol>
&lt;center>&lt;img src="assets/博客源仓库.png" alt="博客源仓库" title="博客源仓库" />&lt;/center>
&lt;h3 id="创建-github-pages-仓库">创建 GitHub Pages 仓库
&lt;/h3>&lt;ol>
&lt;li>按照 &lt;code>&amp;lt;username.github.io&amp;gt;&lt;/code> 的格式命名仓库，&lt;code>&amp;lt;username&amp;gt;&lt;/code> 是自己的 GitHub 的用户名；&lt;/li>
&lt;li>选择 &lt;strong>Public&lt;/strong>，设置为公开仓库；&lt;/li>
&lt;li>勾选添加 &lt;strong>README&lt;/strong> 文件；&lt;/li>
&lt;li>创建仓库。&lt;/li>
&lt;/ol>
&lt;center>&lt;img src="assets/GitHub_Pages_仓库.png" alt="GitHub Pages 仓库" title="GitHub Pages 仓库" />&lt;/center>
&lt;h2 id="克隆博客源仓库到本地">克隆博客源仓库到本地
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>创建项目文件夹（比如我用的是 &lt;strong>Blog&lt;/strong>）；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用 &lt;code>cd&lt;/code> 命令进入该文件夹（从此处开始建议使用 VS Code）；&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cmd" data-lang="cmd">&lt;span class="line">&lt;span class="cl">&lt;span class="k">cd&lt;/span> Blog
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>克隆&lt;strong>博客源仓库&lt;/strong>到项目文件夹，克隆时使用的 HTTPS 仓库链接在这里查看；&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cmd" data-lang="cmd">&lt;span class="line">&lt;span class="cl">git clone https://github.com/Pomfret27/BlogSource.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>此处直接将 GitHub 上的远程仓库克隆到了本地，所以没必要再对仓库进行初始化，也不需要设置远程地址。&lt;/p>
&lt;h2 id="使用-hugo-创建网站">使用 Hugo 创建网站
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>使用 &lt;code>hugo new site [path] [flags]&lt;/code> 命令可以在提供的目录中创建新的站点；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>这里我选择在 &lt;code>Blog&lt;/code> 文件夹下创建 &lt;code>BlogSource&lt;/code> 站点，由于克隆下来的 &lt;code>BlogSource&lt;/code> 文件夹非空，需要在命令后加上 &lt;code>-f&lt;/code>来强制初始化；&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cmd" data-lang="cmd">&lt;span class="line">&lt;span class="cl">hugo new site BlogSource -f
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>新的站点会有正确的结构，但尚无内容或主题，为了方便后续的操作，可以先选择一个有演示站点的主题。&lt;/li>
&lt;/ol>
&lt;h2 id="配置主题">配置主题
&lt;/h2>&lt;ol>
&lt;li>先到&lt;a class="link" href="https://themes.gohugo.io/" target="_blank" rel="noopener"
>官方的主题市场&lt;/a>选择一个喜欢的主题，下面我以自己使用的 &lt;strong>Stack&lt;/strong> 为例；&lt;/li>
&lt;li>一般主题的说明文档都会有安装相关的指导，各种主题存在差异，Stack 主题的安装可以参考&lt;a class="link" href="https://stack-docs.netlify.app/zh/getting-started" target="_blank" rel="noopener"
>这个&lt;/a>；&lt;/li>
&lt;li>如果主题有演示站点 &lt;code>exampleSite&lt;/code> 文件夹，可以讲其中的 &lt;code>content&lt;/code> 文件夹和 &lt;code>toml&lt;/code> 或是 &lt;code>yaml&lt;/code> 文件复制到站点目录，并删除原先的 &lt;code>hugo.toml&lt;/code> 文件；&lt;/li>
&lt;li>将复制过来的配置文件中的 &lt;strong>baseURL&lt;/strong> 改为自己的网址 &lt;code>https://&amp;lt;username&amp;gt;.github.io/&lt;/code>，其他的修改可以等到网站搭建完成后再说。&lt;/li>
&lt;/ol>
&lt;h2 id="使用-hugo-新建文章">使用 Hugo 新建文章
&lt;/h2>&lt;p>先使用 &lt;code>cd&lt;/code> 命令进入站点目录，再使用 &lt;code>hugo new xxx.md&lt;/code> 命令创建文章。这里先新建一篇空白文章，保证下一步本地预览的时候有文章就行。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cmd" data-lang="cmd">&lt;span class="line">&lt;span class="cl">&lt;span class="k">cd&lt;/span> BlogSource
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">hugo new post xxx.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="本地调试和预览">本地调试和预览
&lt;/h2>&lt;ol>
&lt;li>使用 &lt;code>hugo server&lt;/code> 命令构建网站，如果想要清理未使用的缓存文件，可以在命令后面加上 &lt;code>--gc&lt;/code>；&lt;/li>
&lt;li>执行命令后，使用 &lt;code>Ctrl + 单击&lt;/code> 打开终端中显示的链接 &lt;code>http://localhost:1313/&lt;/code>，端口后默认为1313，可能会发生变化；&lt;/li>
&lt;li>由于 Hugo 的构建速度很快，几乎可以即时地保存和查看更改。&lt;/li>
&lt;/ol>
&lt;h2 id="github-自动部署">GitHub 自动部署
&lt;/h2>&lt;h3 id="生成-token">生成 token
&lt;/h3>&lt;ol>
&lt;li>打开 &lt;strong>GitHub&lt;/strong>，点击右上角的头像，再点击 &lt;strong>Settings&lt;/strong>；&lt;/li>
&lt;li>下拉页面，点击左侧的 &lt;strong>Developer Settings&lt;/strong>；&lt;/li>
&lt;li>点击左侧的 &lt;strong>Personal access tokens&lt;/strong>，再点击 &lt;strong>Tokens (classic)&lt;/strong>;&lt;/li>
&lt;li>点击右侧的 &lt;strong>Generate new token&lt;/strong>，然后选择下面那个 &lt;strong>Generate new token (classic)&lt;/strong>；&lt;/li>
&lt;/ol>
&lt;center>&lt;img src="assets/Generate_new_token.png" alt="Generate new token" title="Generate new token" />&lt;/center>
&lt;ol start="5">
&lt;li>选择 token 到期时间，勾选 token 的访问范围，然后点击 &lt;strong>Generate token&lt;/strong> 生成 token；&lt;/li>
&lt;/ol>
&lt;center>&lt;img src="assets/Generate_token.png" alt="生成 token" title="生成 token" />&lt;/center>
&lt;ol start="6">
&lt;li>生成的 token 只显示一次，所以一定要复制保存下来；&lt;/li>
&lt;/ol>
&lt;h3 id="添加-secret">添加 secret
&lt;/h3>&lt;ol>
&lt;li>复制 token 后打开博客源仓库，点击 &lt;strong>Settings&lt;/strong>，点击左侧的 &lt;strong>Secrets and variables&lt;/strong>，点击 &lt;strong>Actions&lt;/strong>；&lt;/li>
&lt;/ol>
&lt;center>&lt;img src="assets/Actions_secrets.png" alt="Actions secrets" title="Actions secrets" />&lt;/center>
&lt;ol start="2">
&lt;li>填写 Secret 名称，并将前面复制的 token 粘贴到 Secret 框中，添加 secret。&lt;/li>
&lt;/ol>
&lt;center>&lt;img src="assets/Add_secret.png" alt="添加 secret" title="添加 secret" />&lt;/center>
&lt;h3 id="配置-github-actions">配置 GitHub Actions
&lt;/h3>&lt;p>这里先附上官方的 &lt;a class="link" href="https://github.com/marketplace/actions/hugo-setup" target="_blank" rel="noopener"
>GitHub Actions for Hugo&lt;/a>，感兴趣的可以自己看一下。&lt;/p>
&lt;ol>
&lt;li>创建 workflow，在仓库根目录创建 &lt;code>.github&lt;/code> 文件夹，再在里面创建 &lt;code>workflows&lt;/code> 文件夹，之后创建一个 &lt;code>gh-pages.yml&lt;/code> 文件，这个文件的名字也可以自取；&lt;/li>
&lt;li>将下面的内容复制进 yml 文件；&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">GitHub Pages &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">#名字自取&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">push&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">branches&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">main &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 这里的意思是当 main分支发生push的时候，运行下面的jobs，这里先改为github-actions&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">pull_request&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">jobs&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 任务名自取&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">runs-on&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu-latest &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 在什么环境运行任务&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">concurrency&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">group&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ github.workflow }}-${{ github.ref }}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">steps&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">actions/checkout@v4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 引用actions/checkout这个action，与所在的github仓库同名&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">submodules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Fetch Hugo themes (true OR recursive)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">fetch-depth&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Fetch all history for .GitInfo and .Lastmod&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Setup Hugo &lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 步骤名自取&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-hugo@v3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># hugo官方提供的action，用于在任务环境中获取hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hugo-version&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;latest&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 获取最新版本的hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">extended&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 是否使用extended版本的hugo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hugo --minify&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 使用hugo构建静态网页&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">uses&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">peaceiris/actions-gh-pages@v3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 一个自动发布github pages的action&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">github.ref == &amp;#39;refs/heads/main&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># github_token: ${{ secrets.GITHUB_TOKEN }} 该项适用于发布到源码相同repo的情况，不能用于发布到其他repo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">external_repository&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io # 发布到哪个repo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">personal_token&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${{ secrets.YOUR_SECRET_NAME }} # 发布到其他repo需要提供上面生成的personal access token&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">./public # 注意这里指的是要发布哪个文件夹的内容，而不是指发布到目的仓库的什么位置，因为hugo默认生成静态网页到public文件夹，所以这里发布public文件夹里的内容&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">publish_branch&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">main # 发布到哪个branch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>修改 &lt;code>external_repository&lt;/code> 为自己的 &lt;strong>GitHub Pages 仓库&lt;/strong>，把 &lt;code>personal_token&lt;/code> 的 &lt;code>YOUR_SECRET_NAME&lt;/code> 改成前面设置的 &lt;strong>secret&lt;/strong> 名称，如果使用了扩展版的 Hugo，还可以将 &lt;code>extended&lt;/code> 改成 &lt;strong>true&lt;/strong>。&lt;/li>
&lt;/ol>
&lt;h2 id="发布内容">发布内容
&lt;/h2>&lt;p>在本地写完文章，并用 &lt;code>hugo server&lt;/code> 命令在 &lt;code>public&lt;/code> 文件夹下生成静态网页后，只需要将本地仓库的内容推送到远程的&lt;strong>博客源仓库&lt;/strong>，过一段时间，&lt;strong>GitHub Actions&lt;/strong> 就会将博客源仓库的 &lt;code>public&lt;/code> 文件夹的内容推送到 &lt;strong>GitHub Pages 仓库&lt;/strong>，这样就可以通过 &lt;a class="link" href="https://pomfret27.github.io" target="_blank" rel="noopener"
>https://pomfret27.github.io&lt;/a> 来访问博客网站了。&lt;/p>
&lt;p>推送本地仓库可以使用下面的 git 命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cmd" data-lang="cmd">&lt;span class="line">&lt;span class="cl">git add .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git commit -m &lt;span class="s2">&amp;#34;提交信息&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git push origin main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上面三条命令先后完成了&lt;strong>暂存&lt;/strong>、&lt;strong>提交&lt;/strong>、&lt;strong>推送&lt;/strong>三个操作，其中提交信息是必须填写的。&lt;/p>
&lt;p>如果不想每次都手打命令，还可以使用 &lt;strong>VS Code&lt;/strong> 的源代码管理功能。&lt;/p>
&lt;center>&lt;img src="assets/源代码管理.png" alt="源代码管理" title="源代码管理" />&lt;/center>
&lt;p>步骤也是一样，先点击更改的加号来暂存所有更改，再输入提交信息，并点击提交按钮，提交完成后提交两字会变为同步，点击同步按钮即可完成推送。&lt;/p>
&lt;p>如果你想要提交信息变得规范一些，可以安装 &lt;strong>git-commit-plugin&lt;/strong> 插件来寻求帮助。&lt;/p>
&lt;h2 id="参考文献">参考文献
&lt;/h2>&lt;ul>
&lt;li>&lt;a class="link" href="https://krislinzhao.github.io/docs/create-a-wesite-using-github-pages-and-hugo/" target="_blank" rel="noopener"
>krislin. 如何用 GitHub Pages + Hugo 搭建个人博客&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="碎碎念">碎碎念
&lt;/h2>&lt;p>文章中的部分内容并没有详细阐述，这部分内容将拆分到其他文章中，可以点击文章顶部的分类和底部的标签来查看相关文章哦。&lt;/p></description></item><item><title>我最爱的宝可梦</title><link>https://pomfret27.github.io/p/my-favorite-pokemon/</link><pubDate>Sat, 10 May 2025 21:44:36 +0800</pubDate><guid>https://pomfret27.github.io/p/my-favorite-pokemon/</guid><description>&lt;div style="text-align: center; font-size: 80px;">
玛力露丽
&lt;/div>
&lt;center>&lt;img src="assets/玛力露丽.png" alt="玛力露丽" title="玛力露丽" style="zoom: 80%;" />&lt;/center>
&lt;p style="font-size: 1.2em; line-height: 1.6;">
喜不喜欢我高贵的
&lt;span style="font-size: 2em; font-weight: bold; color: #5185c5;">水&lt;/span>
&lt;span style="font-size: 2em; font-weight: bold;;">+&lt;/span>
&lt;span style="font-size: 2em; font-weight: bold; color: #dab4d4;">妖精&lt;/span>
属性？！
&lt;/p>
&lt;div style="display: flex; gap: 10px; justify-content: center;">
&lt;img src="assets/type_03_水.svg" alt="水属性" style="width: 150px; height: auto;">
&lt;img src="assets/type_18_妖精.svg" alt="妖精属性" style="width: 150px; height: auto;">
&lt;/div>
&lt;p style="font-size: 1.2em; line-height: 1.6;">
告诉你，Ag老师都叫我
&lt;span style="font-size: 2em; font-weight: bold; color: #7863a3;">卡璞・鳍鳍2号&lt;/span>
呢！
&lt;/p>
&lt;p style="font-size: 1.2em; line-height: 1.6;">
喜不喜欢我
&lt;span style="font-size: 2em; font-weight: bold; color: #e62829;">大力士&lt;/span>
特性？！
&lt;/p>
&lt;div style="text-align: center;">
&lt;p style="font-size: 20px; font-weight: bold;">大力士&lt;/p>
&lt;p style="font-size: 16px;">物理攻击的威力会变为２倍。&lt;/p>
&lt;/div>
&lt;p style="font-size: 1.2em; line-height: 1.6;">
不喜欢，不喜欢我还有
&lt;span style="font-size: 2em; font-weight: bold; color: #3fa129;">食草&lt;/span>
（隐藏）特性。
&lt;/p>
&lt;div style="text-align: center;">
&lt;p style="font-size: 20px; font-weight: bold;">食草（隐藏）&lt;/p>
&lt;p style="font-size: 16px;">受到草属性的招式攻击时，不会受到伤害，而是攻击会提高。&lt;/p>
&lt;/div>
&lt;p style="font-size: 1.2em; line-height: 1.6;">
告诉你，我还会
&lt;span style="font-size: 2em; font-weight: bold; color: #9fa19f;">腹鼓&lt;/span>
呢！
&lt;/p>
&lt;div style="text-align: center;">
&lt;p style="font-size: 20px; font-weight: bold;">腹鼓&lt;/p>
&lt;p style="font-size: 16px;">将自己的ＨＰ减少到最大ＨＰ的一半，从而最大限度提高自己的攻击。&lt;/p>
&lt;/div>
&lt;p style="font-size: 1.2em; line-height: 1.6;">
最后，让你看看闪光的我
&lt;span style="font-size: 2em; font-weight: bold; color: #fef03e;">有多可爱&lt;/span>
&lt;span style="font-size: 2em; font-weight: bold; ">！！！&lt;/span>
&lt;/p>
&lt;center>&lt;img src="assets/玛力露丽-闪光.png" alt="闪光玛力露丽" title="闪光玛力露丽" style="zoom: 150%;" />&lt;/center>
&lt;p style="font-size: 1.2em; line-height: 1.6;">
看到这了，你还不喜欢我，那你也是个
&lt;span style="font-size: 2em; font-weight: bold; color: #7f8c8d;">神人&lt;/span>
了😞
&lt;/p></description></item><item><title>我看见宇宙人了</title><link>https://pomfret27.github.io/p/i-saw-alien/</link><pubDate>Tue, 06 May 2025 23:02:04 +0800</pubDate><guid>https://pomfret27.github.io/p/i-saw-alien/</guid><description>&lt;h1 id="出题篇">出题篇
&lt;/h1>&lt;h2 id="科幻电影迷">科幻电影迷
&lt;/h2>&lt;p>我看到宇宙人了。&lt;/p>
&lt;p>请各位放心，我现在十分甚至九分的清醒。那是早上我去上学的时候，我一如既往地路过那一片河堤，那时，我看到了，浑身绿色的家伙在草地上滚来滚去。我忍不住揉了揉自己的眼睛，反复确认那是不是哪个摄影棚跑出来的演员。要知道，我对科幻电影的道具和服装很有研究，所以我可以肯定地说这是宇宙人本人友情出演，绝非特殊服装与道具的结合。当我确认那是真的宇宙人时，这位宇宙人先生也停止了翻滚，TA站起来，做起伸展运动，向后弯腰的幅度之大让我进一步确信了其宇宙人的身份。不好，被看到了！TA站直身子，转过来朝向我，用手指了我一下，又指了一下草坪，最后摆出招呼我过来的手势。看似亲切，实则是要杀死我，阅片无数的我知道这种场合下自己必将面临一场追杀或是秒杀。没有时间可以浪费了，我必须赶紧跑。我推倒正好路过的大爷，让他为我抵挡一会，这样就不用白发人送黑发人了。我一路跑到学校，然后和平常一样上了一天学，直到刚才到家才想起宇宙人的事。&lt;/p>
&lt;hr>
&lt;h2 id="肌肉爱好者">肌肉爱好者
&lt;/h2>&lt;p>我看到宇宙人了。&lt;/p>
&lt;p>请各位放心，我比早上那家伙清醒多了。我是在中午吃完午饭后看到宇宙人的，正准备去睡个午觉。请各位不要质疑我，我确实比他清醒多了，因为见到宇宙人的那一瞬间，我就睡意全无了。我从未见过那么恶心的宇宙人，我并不是指TA长相丑陋，像虫子一样，相反，那一身完美的肌肉可以说是让我垂涎欲滴，但是，TA是深粉色的。如果是普通的粉色，我到不会说什么，现在男性穿着粉色已经是一件很正常的事了；如果是紫色的，我会觉得那是一串巨大的葡萄，也不会有什么反感。但是，他是深粉色的，深到刚好让我作呕的程度。我无法忍受，打算在河堤边找一块石头，狠狠地砸TA一下，但是却一块也找不到。我不死心，仔细寻找，终于还是让我找到了一块好石头，一看就知道拿它砸人很疼。我弯腰下去捡，刚抓到石头就感觉周围变暗了，咽一口口水，我缓缓抬起头，是那恶心的宇宙人。TA把手伸向我，应该说是伸向我手里的石头。我吓得脑袋都转不过来了，只知道自己逃跑了，等我冷静下来，我已经到了学校。上午的课程翘掉了，下午的课程照常上，也没有被老师留下来唠叨翘课的事，回到家我才想起来中午从宇宙人手里逃走了。&lt;/p>
&lt;hr></description></item></channel></rss>