[{"content":"fumo 图鉴 链接放开头 https://www.kdocs.cn/l/cjv4MBfxm4bx\n事情的起因 看了那么多 fumo 的视频，我却还没有一只属于自己的 fumo，逛了一圈 bilibili 和 AmiAmi，却遗憾地发现没有自己想要的 fumo。\n我喜欢的角色出 fumo 了吗？她有几只 fumo？她的 fumo 长什么样子？我在什么时候在哪里能买到她？\n为了回答这几个问题，我查阅了 Gift 官网的 fumo 列表，用多维表格整理了一份 fumo 图鉴。\n图鉴的使用 Gift 官网 画册视图就像 Gift 官网一样赏心悦目，解决了 Gift 官网加载较慢的问题，你可以在这里慢慢欣赏 fumo 们的样子，也可以用筛选功能比较同一角色的不同 fumo。\nfumo 图鉴 表格视图里收录了每只 fumo 最新一次贩售的一些信息，可以帮助你简单判断某只 fumo 现在能不能买到，同时还可以查看吧唧的照片。如果你想要了解 fumo 的更多信息，可以点击官网链接自行查看。\nfumo 的购买时机 事前说明 直到 fumo 图鉴完成，我都还没有下单过一只 fumo，一是财力不足，而是最想要的 fumo 暂时还没有。因此，我所言的“购买 fumo 的时机”，其根据均来源于 Gift 官网的信息和他人的经验，对于过去几年的情况更是一无所知，如有错误，请勿过分责备。\nfumo 的贩售流程 fumo 的贩售一般有以下几个阶段：\n线下优先贩售 线上开启预售 线上补款发货 线上余量贩售 线下优先贩售并不是每一次都有的，而线上贩售基本上都有。预售需要支付定金，预售和补款发货之间通常会相隔半年到一年，等待的时间还是很久的。如果有线下优先贩售，那么贩售时间是线下优先贩售的时间；如果没有线下优先贩售，那么贩售时间是线上贩售发货的时间。补款发货后的几个月，可能会有余量存在，这时错过了预售的朋友们也可以选择全款拿下。\n如果 fumo 是接单生产的，那么就比较容易有余量；如果不是，那么就有提前截单的可能。不过 2022 年 8 月到现在都是接单生产的，没必要那么担心。\nfumo 的购买时机 fumo 可以在线下购买，通常例大祭和 BW 等活动的摊贩会进行先行贩售，另外，日本的一些线下店铺也会贩卖 fumo。\n如果你没有能力赶往线下购买 fumo，也可以尝试找找代购。\nfumo 还可以在线上购买，按照难易顺序大致有以下几种途径：\nbilibili 会员购 淘宝 bilibili 旗舰店 淘宝阿弥阿弥 AmiAmi 中国公式店 amiami.com（全球站） amiami.jp（日本站） Gift ONLINE SHOP 最后两个比较复杂，没有必要就不要尝试了，感兴趣的也可以自行搜索。amiami.com（全球站）操作比较麻烦，而且是从日本发货，要考虑海关等问题，不过如果能找到其他途径没有的 fumo 的话，还是值得尝试的。\n淘宝阿弥阿弥 AmiAmi 中国公式店只有“预售 + 补款”的形式，没有余量可以买。\nbilibili 会员购、淘宝 bilibili 旗舰店、amiami.com（全球站）除了“预售 + 补款”的形式，还可以购买余量，错过预售的朋友们可以等补款发货之后蹲蹲看余量。另外，即使错过了AmiAmi 的预售，也可能在 bilibili 发现全款预售。\n总结 可以在下面几个时间点购买 fumo：\n线下优先贩售，可以请人代购 线上预售，等待补款发货 线上余量贩售，补款发货之后几个月可能存在余量 根据图鉴里的贩售时间信息，推断一下这段时间能不能买到想要的 fumo，四个线上购买途径最好都看一遍，这样就不会错过购买 fumo 的机会，最新贩售的 fumo 的购买时间还是很充裕的，而且如果能买到 fumo 的话 bilibili 和贴吧都会有消息。\n最后希望大家都能有自己想要的 fumo，fumofumofumo (ᗜˬᗜ)\n","date":"2025-08-14T16:04:58+08:00","permalink":"https://pomfret27.github.io/p/fumo-zukan/","title":"fumo 图鉴与 fumo 的购买时机"},{"content":"搭建思路 Hugo 可以将 Markdown 文件转换为 HTML 文件； GitHub Pages 是 GitHub 提供的一个免费的静态网站托管服务，可用于托管个人网站、博客、文档、项目页面等静态内容； 创建 2 个 GitHub 仓库，一个是用于存放博客源文件的博客源仓库，另一个则是用于存放 Hugo 生成的 HTML 文件的 GitHub Pages 仓库； 使用 Github Actions 功能实现提交源码后自动发布。 准备工作 要想使用 Hugo + Github 搭建个人博客，首先要做好以下准备。\n确保网络环境能够稳定地访问 Github； 创建 GitHub 账号； 安装 VS Code 与 Git； 以上内容只要稍加搜索，就能找到大量的教程，在此就不赘述了，接下来讲最后一项准备工作。\n“我有东西可以写，我想写，我想一直写。”\n如果你能做到前两点的话，请继续下一步；如果你能做到全部三点的话，也许哪天我就能看见你的博客；如果你连第一点都还做不到的话，不妨先试着写点什么。\n安装 Hugo Hugo 的安装方法很多，详情可以参考官方的在 Windows 上安装 Hugo，建议安装扩展版（extended）。\n创建 GitHub 仓库 创建博客源仓库 给仓库取一个你喜欢的名字（比如我用的是 BlogSource）； 选择 Private，设置为私有仓库； 勾选添加 README 文件； 创建仓库。 创建 GitHub Pages 仓库 按照 \u0026lt;username.github.io\u0026gt; 的格式命名仓库，\u0026lt;username\u0026gt; 是自己的 GitHub 的用户名； 选择 Public，设置为公开仓库； 勾选添加 README 文件； 创建仓库。 克隆博客源仓库到本地 创建项目文件夹（比如我用的是 Blog）；\n使用 cd 命令进入该文件夹（从此处开始建议使用 VS Code）；\n1 cd Blog 克隆博客源仓库到项目文件夹，克隆时使用的 HTTPS 仓库链接在这里查看； 1 git clone https://github.com/Pomfret27/BlogSource.git 此处直接将 GitHub 上的远程仓库克隆到了本地，所以没必要再对仓库进行初始化，也不需要设置远程地址。\n使用 Hugo 创建网站 使用 hugo new site [path] [flags] 命令可以在提供的目录中创建新的站点；\n这里我选择在 Blog 文件夹下创建 BlogSource 站点，由于克隆下来的 BlogSource 文件夹非空，需要在命令后加上 -f来强制初始化；\n1 hugo new site BlogSource -f 新的站点会有正确的结构，但尚无内容或主题，为了方便后续的操作，可以先选择一个有演示站点的主题。 配置主题 先到官方的主题市场选择一个喜欢的主题，下面我以自己使用的 Stack 为例； 一般主题的说明文档都会有安装相关的指导，各种主题存在差异，Stack 主题的安装可以参考这个； 如果主题有演示站点 exampleSite 文件夹，可以讲其中的 content 文件夹和 toml 或是 yaml 文件复制到站点目录，并删除原先的 hugo.toml 文件； 将复制过来的配置文件中的 baseURL 改为自己的网址 https://\u0026lt;username\u0026gt;.github.io/，其他的修改可以等到网站搭建完成后再说。 使用 Hugo 新建文章 先使用 cd 命令进入站点目录，再使用 hugo new xxx.md 命令创建文章。这里先新建一篇空白文章，保证下一步本地预览的时候有文章就行。\n1 2 cd BlogSource hugo new post xxx.md 本地调试和预览 使用 hugo server 命令构建网站，如果想要清理未使用的缓存文件，可以在命令后面加上 --gc； 执行命令后，使用 Ctrl + 单击 打开终端中显示的链接 http://localhost:1313/，端口后默认为1313，可能会发生变化； 由于 Hugo 的构建速度很快，几乎可以即时地保存和查看更改。 GitHub 自动部署 生成 token 打开 GitHub，点击右上角的头像，再点击 Settings； 下拉页面，点击左侧的 Developer Settings； 点击左侧的 Personal access tokens，再点击 Tokens (classic); 点击右侧的 Generate new token，然后选择下面那个 Generate new token (classic)； 选择 token 到期时间，勾选 token 的访问范围，然后点击 Generate token 生成 token； 生成的 token 只显示一次，所以一定要复制保存下来； 添加 secret 复制 token 后打开博客源仓库，点击 Settings，点击左侧的 Secrets and variables，点击 Actions； 填写 Secret 名称，并将前面复制的 token 粘贴到 Secret 框中，添加 secret。 配置 GitHub Actions 这里先附上官方的 GitHub Actions for Hugo，感兴趣的可以自己看一下。\n创建 workflow，在仓库根目录创建 .github 文件夹，再在里面创建 workflows 文件夹，之后创建一个 gh-pages.yml 文件，这个文件的名字也可以自取； 将下面的内容复制进 yml 文件； 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 name: GitHub Pages #名字自取 on: push: branches: - main # 这里的意思是当 main分支发生push的时候，运行下面的jobs，这里先改为github-actions pull_request: jobs: deploy: # 任务名自取 runs-on: ubuntu-latest # 在什么环境运行任务 concurrency: group: ${{ github.workflow }}-${{ github.ref }} steps: - uses: actions/checkout@v4 # 引用actions/checkout这个action，与所在的github仓库同名 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo # 步骤名自取 uses: peaceiris/actions-hugo@v3 # hugo官方提供的action，用于在任务环境中获取hugo with: hugo-version: \u0026#39;latest\u0026#39; # 获取最新版本的hugo extended: true # 是否使用extended版本的hugo - name: Build run: hugo --minify # 使用hugo构建静态网页 - name: Deploy uses: peaceiris/actions-gh-pages@v3 # 一个自动发布github pages的action if: github.ref == \u0026#39;refs/heads/main\u0026#39; with: # github_token: ${{ secrets.GITHUB_TOKEN }} 该项适用于发布到源码相同repo的情况，不能用于发布到其他repo external_repository: \u0026lt;username\u0026gt;/\u0026lt;username\u0026gt;.github.io\t# 发布到哪个repo personal_token: ${{ secrets.YOUR_SECRET_NAME }}\t# 发布到其他repo需要提供上面生成的personal access token publish_dir: ./public\t# 注意这里指的是要发布哪个文件夹的内容，而不是指发布到目的仓库的什么位置，因为hugo默认生成静态网页到public文件夹，所以这里发布public文件夹里的内容 publish_branch: main\t# 发布到哪个branch 修改 external_repository 为自己的 GitHub Pages 仓库，把 personal_token 的 YOUR_SECRET_NAME 改成前面设置的 secret 名称，如果使用了扩展版的 Hugo，还可以将 extended 改成 true。 发布内容 在本地写完文章，并用 hugo server 命令在 public 文件夹下生成静态网页后，只需要将本地仓库的内容推送到远程的博客源仓库，过一段时间，GitHub Actions 就会将博客源仓库的 public 文件夹的内容推送到 GitHub Pages 仓库，这样就可以通过 https://pomfret27.github.io 来访问博客网站了。\n推送本地仓库可以使用下面的 git 命令：\n1 2 3 git add . git commit -m \u0026#34;提交信息\u0026#34; git push origin main 上面三条命令先后完成了暂存、提交、推送三个操作，其中提交信息是必须填写的。\n如果不想每次都手打命令，还可以使用 VS Code 的源代码管理功能。\n步骤也是一样，先点击更改的加号来暂存所有更改，再输入提交信息，并点击提交按钮，提交完成后提交两字会变为同步，点击同步按钮即可完成推送。\n如果你想要提交信息变得规范一些，可以安装 git-commit-plugin 插件来寻求帮助。\n参考文献 krislin. 如何用 GitHub Pages + Hugo 搭建个人博客 碎碎念 文章中的部分内容并没有详细阐述，这部分内容将拆分到其他文章中，可以点击文章顶部的分类和底部的标签来查看相关文章哦。\n","date":"2025-08-12T19:13:34+08:00","permalink":"https://pomfret27.github.io/p/build-blog-with-hugo-and-github/","title":"使用 Hugo + Github 搭建个人博客"},{"content":" 玛力露丽 喜不喜欢我高贵的 水 + 妖精 属性？！ 告诉你，Ag老师都叫我 卡璞・鳍鳍2号 呢！ 喜不喜欢我 大力士 特性？！ 大力士\n物理攻击的威力会变为２倍。\n不喜欢，不喜欢我还有 食草 （隐藏）特性。 食草（隐藏）\n受到草属性的招式攻击时，不会受到伤害，而是攻击会提高。\n告诉你，我还会 腹鼓 呢！ 腹鼓\n将自己的ＨＰ减少到最大ＨＰ的一半，从而最大限度提高自己的攻击。\n最后，让你看看闪光的我 有多可爱 ！！！ 看到这了，你还不喜欢我，那你也是个 神人 了😞 ","date":"2025-05-10T21:44:36+08:00","permalink":"https://pomfret27.github.io/p/my-favorite-pokemon/","title":"我最爱的宝可梦"},{"content":"出题篇 科幻电影迷 我看到宇宙人了。\n请各位放心，我现在十分甚至九分的清醒。那是早上我去上学的时候，我一如既往地路过那一片河堤，那时，我看到了，浑身绿色的家伙在草地上滚来滚去。我忍不住揉了揉自己的眼睛，反复确认那是不是哪个摄影棚跑出来的演员。要知道，我对科幻电影的道具和服装很有研究，所以我可以肯定地说这是宇宙人本人友情出演，绝非特殊服装与道具的结合。当我确认那是真的宇宙人时，这位宇宙人先生也停止了翻滚，TA站起来，做起伸展运动，向后弯腰的幅度之大让我进一步确信了其宇宙人的身份。不好，被看到了！TA站直身子，转过来朝向我，用手指了我一下，又指了一下草坪，最后摆出招呼我过来的手势。看似亲切，实则是要杀死我，阅片无数的我知道这种场合下自己必将面临一场追杀或是秒杀。没有时间可以浪费了，我必须赶紧跑。我推倒正好路过的大爷，让他为我抵挡一会，这样就不用白发人送黑发人了。我一路跑到学校，然后和平常一样上了一天学，直到刚才到家才想起宇宙人的事。\n肌肉爱好者 我看到宇宙人了。\n请各位放心，我比早上那家伙清醒多了。我是在中午吃完午饭后看到宇宙人的，正准备去睡个午觉。请各位不要质疑我，我确实比他清醒多了，因为见到宇宙人的那一瞬间，我就睡意全无了。我从未见过那么恶心的宇宙人，我并不是指TA长相丑陋，像虫子一样，相反，那一身完美的肌肉可以说是让我垂涎欲滴，但是，TA是深粉色的。如果是普通的粉色，我到不会说什么，现在男性穿着粉色已经是一件很正常的事了；如果是紫色的，我会觉得那是一串巨大的葡萄，也不会有什么反感。但是，他是深粉色的，深到刚好让我作呕的程度。我无法忍受，打算在河堤边找一块石头，狠狠地砸TA一下，但是却一块也找不到。我不死心，仔细寻找，终于还是让我找到了一块好石头，一看就知道拿它砸人很疼。我弯腰下去捡，刚抓到石头就感觉周围变暗了，咽一口口水，我缓缓抬起头，是那恶心的宇宙人。TA把手伸向我，应该说是伸向我手里的石头。我吓得脑袋都转不过来了，只知道自己逃跑了，等我冷静下来，我已经到了学校。上午的课程翘掉了，下午的课程照常上，也没有被老师留下来唠叨翘课的事，回到家我才想起来中午从宇宙人手里逃走了。\n","date":"2025-05-06T23:02:04+08:00","permalink":"https://pomfret27.github.io/p/i-saw-alien/","title":"我看见宇宙人了"}]